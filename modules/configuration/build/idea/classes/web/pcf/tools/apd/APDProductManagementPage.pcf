<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <Page
    canVisit="new gw.api.web.userpreference.UserPreferencesOfCurrentUser().canDesign() and gw.api.system.PCDependenciesGateway.ServerMode.Dev"
    id="APDProductManagementPage"
    title="DisplayKey.get(&quot;Web.APDProductManagementPage.Title&quot;)">
    <Variable
      initialValue="new gw.api.web.userpreference.UserPreferencesOfCurrentUser().inDevelopMode()"
      name="inDevelopMode"
      type="Boolean"/>
    <Screen>
      <CardViewPanel>
        <Card
          id="VisualizedProducts"
          title="DisplayKey.get(&quot;Web.APD.ApdManaged&quot;)">
          <ListDetailPanel
            selectionName="selectedProduct"
            selectionType="gw.apd.APDProductManagementPageHelper.ProductManagementDisplayWrapper">
            <PanelRef>
              <Toolbar>
                <ToolbarButton
                  action="APDLoadXmindPopup.push()"
                  id="ImportFromXmind"
                  label="DisplayKey.get(&quot;Web.APD.ImportFromXmindButton&quot;)"/>
                <ToolbarButton
                  action="APDLoadProductTemplatePopup.push()"
                  id="ImportFromTemplate"
                  label="DisplayKey.get(&quot;Web.APD.ImportFromTemplateButton&quot;)"/>
                <ToolbarButton
                  action="APDNewProductPopup.push(null, null)"
                  id="NewProduct"
                  label="DisplayKey.get(&quot;Web.APD.AddNewProductButton&quot;)"/>
              </Toolbar>
              <ListViewPanel
                id="ManualProductLV">
                <RowIterator
                  editable="false"
                  elementName="manualProduct"
                  id="manualProduct"
                  value="gw.apd.APDProductManagementPageHelper.getApdManagedProducts()"
                  valueType="gw.apd.APDProductManagementPageHelper.ProductManagementDisplayWrapper[]">
                  <Row>
                    <TextCell
                      id="Name"
                      label="DisplayKey.get(&quot;Web.APD.ManualProduct.Name&quot;)"
                      value="manualProduct.Name"/>
                    <TextCell
                      id="Description"
                      label="DisplayKey.get(&quot;Web.APD.ManualProduct.Description&quot;)"
                      value="manualProduct.Description"/>
                    <BooleanRadioCell
                      icon="&quot;completed&quot;"
                      iconType="svgFileName"
                      id="Installed"
                      label="DisplayKey.get(&quot;Web.APD.ManualProduct.Installed&quot;)"
                      showHeaderIcon="false"
                      value="manualProduct.Installed"/>
                    <DateCell
                      id="DateInstalled"
                      label="DisplayKey.get(&quot;Web.APD.ManualProduct.DateInstalled&quot;)"
                      value="manualProduct.DateInstalled"/>
                    <DateCell
                      dateFormat="short"
                      id="LastUpdated"
                      label="DisplayKey.get(&quot;Web.APD.ManualProduct.LastUpdated&quot;)"
                      timeFormat="short"
                      value="manualProduct.DateUpdated"/>                    
                  </Row>
                </RowIterator>
              </ListViewPanel>
            </PanelRef>
            <CardViewPanel>
              <Card
                id="selectedProduct"
                title="DisplayKey.get(&quot;Web.APD.ManualProduct.Details&quot;)"
                visible="selectedProduct != null">
                <PanelSet>
                  <Variable
                    initialValue="new gw.apd.APDProductTreeHelper()"
                    name="apdTreeHelper"
                    type="gw.apd.APDProductTreeHelper"/>
                  <Variable
                    initialValue="false"
                    name="refreshOnUpdate"
                    type="Boolean"/>
                  <Variable
                    initialValue="var tree = selectedProduct.Visualized ? apdTreeHelper.createProductTree((selectedProduct as gw.apd.APDProductManagementPageHelper.ProductManagementAPDProductWrapper).APDProductMetadata, refreshOnUpdate) : null; refreshOnUpdate = false; return tree"
                    name="productTree"
                    recalculateOnRefresh="true"
                    type="gw.api.tree.RowTreeRootNode"/>
                  <PanelRef
                    id="selectedProductRef">
                    <TitleBar
                      id="selectedProductTitle"
                      title="selectedProduct.Name"/>
                    <Toolbar>
                      <ToolbarButton
                        action="APDProductDefinition.go((selectedProduct as gw.apd.APDProductManagementPageHelper.ProductManagementAPDProductWrapper).APDProductMetadata)"
                        available="selectedProduct.Visualized"
                        id="EditProduct"
                        label="DisplayKey.get(&quot;Web.APD.EditProductButton&quot;)"
                        shortcut="E"/>
                      <ToolbarButton
                        hideIfEditable="true"
                        id="UpdateProductButton"
                        label="DisplayKey.get(&quot;Web.APD.UpdateProductButton&quot;)">
                        <MenuItem
                          action="if (selectedProduct.Visualized) {APDLoadProductTemplatePopup.push((selectedProduct as gw.apd.APDProductManagementPageHelper.ProductManagementAPDProductWrapper).APDProductMetadata)} else {APDLoadProductTemplatePopup.push((selectedProduct as gw.apd.APDProductManagementPageHelper.ProductManagementConcreteProductWrapper).ProductMetadata)}; refreshOnUpdate = true;"
                          id="FromTemplate"
                          label="DisplayKey.get(&quot;Web.APD.UpdateProductButton.FromTemplate&quot;)"/>
                        <MenuItem
                          action="if (selectedProduct.Visualized) {APDLoadXmindPopup.push((selectedProduct as gw.apd.APDProductManagementPageHelper.ProductManagementAPDProductWrapper).APDProductMetadata)} else {APDLoadXmindPopup.push((selectedProduct as gw.apd.APDProductManagementPageHelper.ProductManagementConcreteProductWrapper).ProductMetadata)}; refreshOnUpdate = true;"
                          id="FromXmind"
                          label="DisplayKey.get(&quot;Web.APD.UpdateProductButton.FromXmind&quot;)"/>
                      </ToolbarButton>
                      <ToolbarButton
                        action="(selectedProduct as gw.apd.APDProductManagementPageHelper.ProductManagementAPDProductWrapper).APDProductMetadata.maybeRemove()"
                        available="selectedProduct.Visualized and (selectedProduct as gw.apd.APDProductManagementPageHelper.ProductManagementAPDProductWrapper).APDProductMetadata.canRemove()"
                        confirmMessage="DisplayKey.get(&quot;Web.APD.RemoveProduct.Confirmation&quot;, selectedProduct.Name)"
                        id="RemoveProduct"
                        label="DisplayKey.get(&quot;Web.APD.RemoveProduct.Button&quot;)"
                        visible="inDevelopMode"/>
                      <ToolbarButton
                        action="(selectedProduct as gw.apd.APDProductManagementPageHelper.ProductManagementAPDProductWrapper).APDProductMetadata.exportToClient()"
                        available="selectedProduct.Visualized and (selectedProduct as gw.apd.APDProductManagementPageHelper.ProductManagementAPDProductWrapper).APDProductMetadata.CanExport"
                        download="true"
                        id="ExportTemplate"
                        label="DisplayKey.get(&quot;Web.APDProduct.Button.ExportTemplate&quot;)"
                        shortcut="X"/>
                      <ToolbarButton
                        action="gw.apd.model.generate.xml.ProductTemplateGenerator.downloadXml(selectedProduct.CodeIdentifier)"
                        confirmMessage="DisplayKey.get(&quot;Web.APDProduct.Button.Export.GenerateTemplate.ConfirmMessage&quot;)"
                        download="true"
                        id="ExportGeneratedTemplate"
                        label="DisplayKey.get(&quot;Web.APDProduct.Button.Export.GenerateTemplate&quot;)"
                        tooltip="DisplayKey.get(&quot;Web.APDProduct.Button.Export.GenerateTemplate.Tooltip&quot;)"
                        visible="selectedProduct.Installed"/>
                    </Toolbar>
                    <DetailViewPanel>
                      <InputColumn>
                      </InputColumn>
                    </DetailViewPanel>
                  </PanelRef>
                  <PanelRef
                    id="ProductTreeRef">
                    <Toolbar>
                      <ToolbarInput
                        id="TreeContents"
                        value="DisplayKey.get(&quot;Web.APD.ProductTree.Contents&quot;)" 
                        valueType="java.lang.String"/>
                      <ToolbarInput
                        action="apdTreeHelper.expandAll(productTree)"
                        id="ExpandAll"
                        value="DisplayKey.get(&quot;Button.Expand&quot;)" 
                        valueType="java.lang.String"/>
                      <ToolbarInput
                        action="apdTreeHelper.collapseAll(productTree)"
                        id="CollapseAll"
                        value="DisplayKey.get(&quot;Button.Collapse&quot;)" 
                        valueType="java.lang.String"/>
                    </Toolbar>
                    <Verbatim
                      id="InfoMessage"
                      label="DisplayKey.get(&quot;Web.APD.ContentUnavailableMessage&quot;, selectedProduct.Name)"
                      visible="productTree == null"
                      warning="true"/>
                    <ListViewPanel
                      id="ProductTreeLV">
                      <RowTree
                        canPick="false"
                        contentType="gw.xml.XMLNode"
                        elementName="item"
                        id="ProductRowTree"
                        value="productTree">
                        <Row
                          id="TreeRow">
                          <TextCell
                            id="NodeName"
                            label="DisplayKey.get(&quot;Web.APD.ProductTree.NodeName&quot;)"
                            value="item.getAttributeValue(&quot;Name&quot;)"
                            wrap="true"/>
                          <TextCell
                            id="NodeType"
                            label="DisplayKey.get(&quot;Web.APD.ProductTree.Type&quot;)"
                            value="item.getAttributeValue(&quot;Type&quot;)"/>
                        </Row>
                      </RowTree>
                    </ListViewPanel>
                  </PanelRef>
                </PanelSet>
              </Card>
              <Card
                id="ProductSubmissions"
                title="DisplayKey.get(&quot;Web.APD.ManualProduct.Submissions&quot;)"
                visible="selectedProduct != null">
                <PanelRef>
                  <TitleBar
                    id="ProductSubmissionsTitle"
                    title="DisplayKey.get(&quot;Web.APDProductManagementPage.SubmissionLV.Title&quot;, selectedProduct.Name)"/>
                  <ListViewPanel
                    id="ProductSubmissionsLV">
                    <RowIterator
                      editable="false"
                      elementName="submission"
                      value="selectedProduct.getSubmissions()"
                      valueType="gw.api.database.IQueryBeanResult&lt;Submission&gt;">
                      <Row>
                        <TextCell
                          action="JobForward.go(submission)"
                          id="SubNumber"
                          label="DisplayKey.get(&quot;Web.APDProductManagementPage.SubmissionLV.Number&quot;)"
                          value="submission.JobNumber"/>
                        <TextCell
                          action="ContactForward.go(submission.LatestPeriod.PrimaryNamedInsured.AccountContactRole.AccountContact.Contact)"
                          id="SubPrimaryInsured"
                          label="DisplayKey.get(&quot;Web.APDProductManagementPage.SubmissionLV.PrimaryInsured&quot;)"
                          value="submission.PrimaryInsuredName"/>
                        <DateCell
                          id="SubEffDate"
                          label="DisplayKey.get(&quot;Web.APDProductManagementPage.SubmissionLV.EffectiveDate&quot;)"
                          value="submission.SelectedVersion.EditEffectiveDate"/>
                        <TextCell
                          id="SubStatus"
                          label="DisplayKey.get(&quot;Web.APDProductManagementPage.SubmissionLV.Status&quot;)"
                          value="submission.DisplayStatus"/>
                      </Row>
                    </RowIterator>
                  </ListViewPanel>
                </PanelRef>
              </Card>
              <Card
                id="ProductInstalledEditions"
                title="DisplayKey.get(&quot;Web.APD.InstalledEditions&quot;)"
                visible="selectedProduct != null and selectedProduct.Installed">
                <PanelSet>
                  <Variable
                    initialValue="selectedProduct == null ? null : selectedProduct.getInstalledProduct()"
                    name="installedProduct"
                    recalculateOnRefresh="true"
                    type="gw.api.productmodel.Product"/>
                  <Variable
                    initialValue="new gw.apd.APDInstalledEditionTreeHelper()"
                    name="installedEditionTreeHelper"
                    type="gw.apd.APDInstalledEditionTreeHelper"/>
                  <Variable
                    initialValue="false"
                    name="refreshTreePreloaded"
                    type="Boolean"/>
                  <Variable
                    initialValue="false"
                    name="refreshTreeActivated"
                    type="Boolean"/>
                  <Variable
                    initialValue="installedEditionTreeHelper.createPreloadedInstalledEditionAndInstalledRuleTree(installedProduct, refreshTreePreloaded); refreshTreePreloaded = false; return installedEditionTreeHelper.InstalledEditionTreePreloaded"
                    name="installedEditionTreePreloaded"
                    recalculateOnRefresh="true"
                    type="gw.api.tree.RowTreeRootNode"/>
                  <Variable
                    initialValue="installedEditionTreeHelper.createActivatedInstalledEditionAndInstalledRuleTree(installedProduct, refreshTreeActivated); refreshTreeActivated= false; return installedEditionTreeHelper.InstalledEditionTreeActivated"
                    name="installedEditionTreeActivated"
                    recalculateOnRefresh="true"
                    type="gw.api.tree.RowTreeRootNode"/>
                  <Variable
                    initialValue="installedEditionTreeHelper.InstalledRuleTreePreloaded"
                    name="installedRuleTreePreloaded"
                    recalculateOnRefresh="true"
                    type="gw.api.tree.RowTreeRootNode"/>
                  <Variable
                    initialValue="installedEditionTreeHelper.InstalledRuleTreeActivated"
                    name="installedRuleTreeActivated"
                    recalculateOnRefresh="true"
                    type="gw.api.tree.RowTreeRootNode"/>
                  <Variable
                    initialValue="installedEditionTreeHelper.InstalledRuleTreePreloadedContainsInvalidRules"
                    name="invalidRulesPreloadedBoolean"
                    recalculateOnRefresh="true"
                    type="Boolean"/>
                  <Variable
                    initialValue="installedEditionTreeHelper.InstalledRuleTreeActivatedContainsInvalidRules"
                    name="invalidRulesActivatedBoolean"
                    recalculateOnRefresh="true"
                    type="Boolean"/>
                  <PanelRef
                    id="InstalledEditionsRef">
                    <TitleBar
                      id="InstalledEditionsTitle"
                      title="DisplayKey.get(&quot;Web.APD.InstalledEditionsTitle&quot;, selectedProduct.Name)"/>
                    <Toolbar
                      id="InstalledEditionsToolbar">
                      <ToolbarButton
                        action="APDLoadEditionTemplatePopup.push(CurrentLocation, installedProduct); refreshTreePreloaded = true;"
                        id="PreloadEditions"
                        label="DisplayKey.get(&quot;Web.APD.PreloadEditionsButton&quot;)"/>
                      <ToolbarButton
                        action="gw.apd.model.InstalledEditionHelper.activatePreLoadedEditionsForProduct(installedProduct, gw.plugin.util.CurrentUserUtil.CurrentUser.User.DisplayName, Date.CurrentDate); refreshTreeActivated = true; refreshTreePreloaded = true;"
                        available="gw.apd.model.InstalledEditionHelper.enableActivateButtonForProduct(installedProduct)"
                        id="ActivateEditions"
                        label="DisplayKey.get(&quot;Web.APD.ActivateEditionsButton&quot;)"
                        tooltip="DisplayKey.get(&quot;Web.APD.ActivateEditionsTooltip&quot;)"/>
                    </Toolbar>
                    <DetailViewPanel>
                      <InputColumn></InputColumn>
                    </DetailViewPanel>
                  </PanelRef>
                  <PanelRef
                    def="APDInstalledEditionsPanelRow(installedEditionTreePreloaded, installedEditionTreeActivated, installedRuleTreePreloaded, installedRuleTreeActivated, invalidRulesPreloadedBoolean, invalidRulesActivatedBoolean)"/>
                </PanelSet>
              </Card>
            </CardViewPanel>
        </ListDetailPanel>
        </Card>
        <Card
          id="InstalledProducts"
          title="DisplayKey.get(&quot;Web.APD.ExternalManaged&quot;)">
          <ListDetailPanel
            selectionName="productDetails"
            selectionType="gw.api.productmodel.Product">
            <PanelRef>
              <TitleBar
                id="InstalledProductsTitle"
                title="DisplayKey.get(&quot;Web.APD.InstalledProducts&quot;)"/>
              <ListViewPanel
                id="InstalledProductLV">
                <RowIterator
                  editable="false"
                  elementName="installedProduct"
                  id="InstalledProduct"
                  value="gw.apd.APDProductManagementPageHelper.getExternalManagedProducts(false)"
                  valueType="gw.api.productmodel.Product[]">
                  <Row>
                    <TextCell
                      id="Name"
                      label="DisplayKey.get(&quot;Web.APD.InstalledProduct.Name&quot;)"
                      value="installedProduct.Name"/>
                    <TextCell
                      id="Description"
                      label="DisplayKey.get(&quot;Web.APD.InstalledProduct.Description&quot;)"
                      value="installedProduct.Description"/>
                  </Row>
                </RowIterator>
              </ListViewPanel>
            </PanelRef>
            <CardViewPanel>
              <Card
                id="ProductDetails"
                title="DisplayKey.get(&quot;Web.APD.InstalledProducts.Details&quot;)">
                <PanelSet>
                  <PanelRef>
                    <TitleBar
                      id="ProductDetailsTitle"
                      title="productDetails.Name"/>
                    <Toolbar
                      id="ProductDetailsToolbar">
                      <ToolbarButton
                        action="gw.apd.model.generate.xml.ProductTemplateGenerator.downloadXml(productDetails.CodeIdentifier)"
                        download="true"
                        id="GenerateTemplate"
                        label="DisplayKey.get(&quot;Web.APDProduct.Button.Export.GenerateTemplate&quot;)"/>
                    </Toolbar>
                    <DetailViewPanel>
                      <InputColumn></InputColumn>
                    </DetailViewPanel>
                  </PanelRef>
                  <PanelRef>
                    <DetailViewPanel>
                      <InputColumn>
                        <Label
                          label="DisplayKey.get(&quot;Web.APD.Product&quot;)"/>
                        <TextInput
                          id="ProductDetailsName"
                          label="DisplayKey.get(&quot;Web.APD.InstalledProducts.Details.Name&quot;)"
                          value="productDetails.Name"/>
                        <TextInput
                          id="ProductDetailsDescription"
                          label="DisplayKey.get(&quot;Web.APD.InstalledProducts.Details.Description&quot;)"
                          value="productDetails.Description"/>
                        <TextInput
                          id="ProductDetailsIdentifier"
                          label="DisplayKey.get(&quot;Web.APD.InstalledProducts.Details.Identifier&quot;)"
                          value="productDetails.CodeIdentifier"/>
                        <TextInput
                          id="ProductDetailsAbbreviation"
                          label="DisplayKey.get(&quot;Web.APD.InstalledProducts.Details.Abbreviation&quot;)"
                          value="productDetails.Abbreviation"/>
                      </InputColumn>
                    </DetailViewPanel>
                  </PanelRef>
                </PanelSet>
              </Card>
            </CardViewPanel>
          </ListDetailPanel>
        </Card>
      </CardViewPanel>
    </Screen>
  </Page>
</PCF>