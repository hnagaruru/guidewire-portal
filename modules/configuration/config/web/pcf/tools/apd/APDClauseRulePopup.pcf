<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <Popup
    afterEnter="initialise()"
    beforeCancel="removeUneditedCopy()"
    beforeCommit="rule.removeIfUnnecessary(); if (riskCoverable != null) riskCoverable.syncClauseAvailability(clause)"
    canEdit="openForEdit"
    canVisit="true"
    id="APDClauseRulePopup"
    startInEditMode="currentRule.Edition == edition"
    title="gw.apd.web.APDRulePopupHelper.getRulePopupTitle(ruleType, typekey.APDRule.TC_APDCLAUSERULE)">
    <LocationEntryPoint
      signature="APDClauseRulePopup(currentRule:APDClauseRule, clause:APDClause, ruleType:APDRuleType, edition:APDProductLineEdition, openForEdit:boolean)"/>
    <LocationEntryPoint
      signature="APDClauseRulePopup(currentRule:APDClauseRule, clause:APDClause, ruleType:APDRuleType, riskCoverable:APDRiskCoverable, edition:APDProductLineEdition, openForEdit:boolean)"/>
    <Variable
      name="currentRule"
      type="APDClauseRule"/>
    <Variable
      name="clause"
      type="APDClause"/>
    <Variable
      name="ruleType"
      type="APDRuleType"/>
    <Variable
      name="riskCoverable"
      type="APDRiskCoverable"/>
    <Variable
      name="edition"
      type="APDProductLineEdition"/>
    <Variable
      name="openForEdit"
      type="boolean"/>
    <Variable
      name="rule"
      type="APDClauseRule"/>
    <Screen>
      <Toolbar>
        <EditButtons
          editLabel="DisplayKey.get(&quot;Web.APDAttributeRule.EditButton&quot;)"
          editVisible="currentRule.Edition != edition"/>
        <ToolbarButton
          action="clause.removeFromRules(rule); CurrentLocation.commit()"
          id="Delete"
          label="DisplayKey.get(&quot;Web.APDAttributeRule.Delete&quot;)"
          visible="CurrentLocation.InEditMode and currentRule != null"/>
      </Toolbar>
      <DetailViewPanel
        editable="true">
        <InputColumn>
          <TextInput
            id="clauseLabel"
            label="DisplayKey.get(&quot;Web.APDAttributeRule.Label&quot;)"
            value="clause.Name"
            visible="clause.Name.HasContent"/>
          <InputSet
            visible="rule.RuleType == APDRuleType.TC_EXISTENCE">
            <RangeInput
              editable="true"
              id="DefaultExistence"
              label="gw.apd.web.APDRulePopupHelper.getDefaultValueLabel(rule)"
              required="true"
              value="rule.DefaultExistence"
              valueRange="APDDataExistenceType.TF_CLAUSEEXISTENCE.TypeKeys"
              valueType="APDDataExistenceType">
              <PostOnChange/>
            </RangeInput>
            <TextInput
              id="RuleDescText"
              labelAbove="true"
              value="gw.apd.web.APDRulePopupHelper.getRuleDisplayDescription(rule)"/>
            <TextInput
              id="SubClauseRuleDescText"
              labelAbove="true"
              value="DisplayKey.get(&quot;Web.APDRule.SubClause.Available&quot;, clause.Name ?: &quot;&quot;, clause.ParentClause.Name ?: &quot;&quot;)"
              visible="clause.HasParent"/>
          </InputSet>
        </InputColumn>
        <InputColumn>
          <InputSetRef
            def="APDRuleEditionInputSet(CurrentLocation.InEditMode ? rule : currentRule, edition)"/>
        </InputColumn>
      </DetailViewPanel>
      <PanelRef
        def="APDRuleDV(rule, edition)"
        editable="rule.Edition == edition"/>
    </Screen>
    <Code><![CDATA[function initialise() {
  if (currentRule.Edition != edition) { // there is not a rule for the current edition
    if (currentRule == null) { // there is no rule
      rule = buildNewRule(edition)
    } else { // there is a rule already of a previous edition
      rule = currentRule.copyToNewEdition(edition) as APDClauseRule
      clause.addToRules(rule)
    }
  } else if (currentRule == null) { // there is no rule (or edition!)
    rule = buildNewRule(null) // this builds a base rule
  } else { // there is a rule for the current edition
    rule = currentRule
  }
}

private function buildNewRule(e : APDEdition) : APDClauseRule {
  var newRule = clause.createAndAddRule(ruleType)
  newRule.Edition = e
  return newRule
}

function removeUneditedCopy() {
  // when the rule is copied for display and potential editing ...
  if (not CurrentLocation.InEditMode and currentRule != rule) {
    clause.removeFromRules(rule)
  }
}]]></Code>
  </Popup>
</PCF>